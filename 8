import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.UUID;

public class TaskManager {
    private List<Task> tasks;
    
    public TaskManager() {
        tasks = new ArrayList<>();
    }
    
    public void addTask(Task task) {
        tasks.add(task);
    }
    
    public String printTaskDetails() {
        StringBuilder sb = new StringBuilder();
        for (Task task : tasks) {
            sb.append(task.toString()).append("\n");
        }
        return sb.toString();
    }
    
    public int returnTotalHours() {
        int totalHours = 0;
        for (Task task : tasks) {
            totalHours += task.getDuration();
        }
        return totalHours;
    }
    
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        TaskManager taskManager = new TaskManager();
        
        System.out.print("Enter the number of tasks: ");
        int numTasks = input.nextInt();
        input.nextLine(); // consume the newline character
        
        for (int i = 1; i <= numTasks; i++) {
            System.out.printf("Enter details for Task %d:\n", i);
            System.out.print("Task Name: ");
            String name = input.nextLine();
            System.out.print("Task Description: ");
            String description = input.nextLine();
            System.out.print("Developer Details: ");
            String developer = input.nextLine();
            System.out.print("Task Duration: ");
            int duration = input.nextInt();
            input.nextLine(); // consume the newline character
            String id = UUID.randomUUID().toString();
            System.out.printf("Task ID: %s\n", id);
            System.out.print("Task Status: ");
            String status = input.nextLine();
            Task task = new Task(name, description, developer, duration, id, status);
            taskManager.addTask(task);
        }
        
        System.out.println("\nTask Details:");
        System.out.println(taskManager.printTaskDetails());
        System.out.printf("Total Hours: %d\n", taskManager.returnTotalHours());
    }
    
    private static class Task {
        private String name;
        private String description;
        private String developer;
        private int duration;
        private String id;
        private String status;
        
        public Task(String name, String description, String developer, int duration, String id, String status) {
            this.name = name;
            this.description = description;
            this.developer = developer;
            this.duration = duration;
            this.id = id;
            this.status = status;
        }
        
        public String getName() {
            return name;
        }
        
        public String getDescription() {
            return description;
        }
        
        public String getDeveloper() {
            return developer;
        }
        
        public int getDuration() {
            return duration;
        }
        
        public String getId() {
            return id;
        }
        
        public String getStatus() {
            return status;
        }
        
        public String toString() {
            return String.format(
                "Task Name: %s, Task Description: %s, Developer Details: %s, Task Duration: %d, Task ID: %s, Task Status: %s",
                name, description, developer, duration, id, status);
        }
    }
}
``
 
