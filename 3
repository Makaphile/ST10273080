public class Login{
private String username;

public Login(String username){
this.username = username;
}

public boolean checkUserName(){
if(username.length()>8){
return false;
}
if(username.indexOf("_") == -1){
return false;
}
return true;
 }
public class PasswordChecker {

public static void main(String[]args)
{
String password = password;
boolean isPasswordComplex = checkPasswordComplexity(password);
if(isPasswordComplex){
System.out.println("The password is complex and meets all the requirements.");
}else{
System.out.println("The password does not meet the complexity requirements.");
 }
}

public static boolean 
checkPasswordComplexity(String password){
if (password.length()<8){
return false;
}
boolean hasUpperCase = false;
boolean hasNumber = false;
boolean hasSpecialChar = false;
for( int i = 0;i < password.length();i ++){
char c = password.charAt(i);
if(Character.isUpperCase(c)){
hasUpperCase = true;
}else if(!Character.isLetterOrDigit(c)){
hasSpecialChar = true;
 }
}
return hasUpperCase && hasNumber && hasSpecialChar;
 }
}
public class UserRegistration{

public static void main(String[]args){
String username = username;
String password = password;
String registrationMessage = registerUser(username,password);

public static String
rsgisterUser(String username,String password){
boolean isUsernameValid = checkUsernameFormat(username);
boolean isPasswordComplex = checkPasswordComplexity(password);
if(!isUsernameValid){
return "Invalid username format.Please use only alphanumeric characters and underscores.";
}else if(!isPasswordComplex){
return "Password does not meet the complexity requirements.It must be at least 8 characters long,contain a capital letter, a number, and a special character.");
} else{

return "User registered successfully.";
}
}

public static boolean 
checkUsernameFormat(String username){

alphanumeric characters and underscores return username.matches("[\\w]+");
}

public static boolean 
checkPasswordComplexity(String password){

if(password.length()<8){
return false;
}
boolean hasUpperCase = false;
boolean hasNumber = false;
boolean hasSpecialChar = false;
for (int i = 0;i < password.length();i++){
char c = password.charAt(i);
if(Character.isUpperCase(c)){
hasUpperCase = true;
} else if (Character.isDigit(c)){
hasNumber = true;
}else if (!Character.isLetterOrDigit(c))
{
hasSpecialChar = true;
}
}
return hasUpperCase && hasNumber && hasSpecialChar;
}
}
public class LoginSystem{
private String username;
private String password;
private boolean isLoggedln;

public LoginSystem(String username,String password){
this.username = username;
this.password = password;
}

public boolean loginUser(String enteredUsername, String entered password){
if
(enteredUsername.equals(username) && enteredPassword.equals(password)){
isLoggedIn = true;
return true;
 }
return false;
}

public String returnLoginStatus(){
if (isLoggedIn){
return "Login successful";
}else{
return "Login failed";
  }
 }
}
